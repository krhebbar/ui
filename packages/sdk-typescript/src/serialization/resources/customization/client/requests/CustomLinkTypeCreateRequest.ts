/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "../../../../index";
import * as DevRev from "../../../../../api/index";
import * as core from "../../../../../core";
import { LinkTargetDescriptor } from "../../../../types/LinkTargetDescriptor";

export const CustomLinkTypeCreateRequest: core.serialization.Schema<
    serializers.CustomLinkTypeCreateRequest.Raw,
    DevRev.CustomLinkTypeCreateRequest
> = core.serialization.object({
    backwardName: core.serialization.property("backward_name", core.serialization.string()),
    deprecated: core.serialization.boolean().optional(),
    forwardName: core.serialization.property("forward_name", core.serialization.string()),
    name: core.serialization.string(),
    sourceTypes: core.serialization.property("source_types", core.serialization.list(LinkTargetDescriptor)),
    targetTypes: core.serialization.property("target_types", core.serialization.list(LinkTargetDescriptor)),
    tooltip: core.serialization.string().optional(),
});

export declare namespace CustomLinkTypeCreateRequest {
    interface Raw {
        backward_name: string;
        deprecated?: boolean | null;
        forward_name: string;
        name: string;
        source_types: LinkTargetDescriptor.Raw[];
        target_types: LinkTargetDescriptor.Raw[];
        tooltip?: string | null;
    }
}
