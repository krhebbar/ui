/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "../../../../index";
import * as DevRev from "../../../../../api/index";
import * as core from "../../../../../core";
import { UpdateLinkTargetDescriptorList } from "../../../../types/UpdateLinkTargetDescriptorList";

export const CustomLinkTypeUpdateRequest: core.serialization.Schema<
    serializers.CustomLinkTypeUpdateRequest.Raw,
    DevRev.CustomLinkTypeUpdateRequest
> = core.serialization.object({
    backwardName: core.serialization.property("backward_name", core.serialization.string().optional()),
    deprecated: core.serialization.boolean().optional(),
    forwardName: core.serialization.property("forward_name", core.serialization.string().optional()),
    id: core.serialization.string(),
    name: core.serialization.string().optional(),
    sourceTypes: core.serialization.property("source_types", UpdateLinkTargetDescriptorList.optional()),
    targetTypes: core.serialization.property("target_types", UpdateLinkTargetDescriptorList.optional()),
    tooltip: core.serialization.string().optional(),
});

export declare namespace CustomLinkTypeUpdateRequest {
    interface Raw {
        backward_name?: string | null;
        deprecated?: boolean | null;
        forward_name?: string | null;
        id: string;
        name?: string | null;
        source_types?: UpdateLinkTargetDescriptorList.Raw | null;
        target_types?: UpdateLinkTargetDescriptorList.Raw | null;
        tooltip?: string | null;
    }
}
