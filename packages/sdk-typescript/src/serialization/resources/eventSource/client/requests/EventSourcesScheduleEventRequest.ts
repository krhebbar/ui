/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "../../../../index";
import * as DevRev from "../../../../../api/index";
import * as core from "../../../../../core";

export const EventSourcesScheduleEventRequest: core.serialization.Schema<
    serializers.EventSourcesScheduleEventRequest.Raw,
    DevRev.EventSourcesScheduleEventRequest
> = core.serialization.object({
    eventKey: core.serialization.property("event_key", core.serialization.string().optional()),
    eventType: core.serialization.property("event_type", core.serialization.string()),
    id: core.serialization.string(),
    payload: core.serialization.string(),
    publishAt: core.serialization.property("publish_at", core.serialization.date().optional()),
    updateIfExists: core.serialization.property("update_if_exists", core.serialization.boolean().optional()),
});

export declare namespace EventSourcesScheduleEventRequest {
    interface Raw {
        event_key?: string | null;
        event_type: string;
        id: string;
        payload: string;
        publish_at?: string | null;
        update_if_exists?: boolean | null;
    }
}
