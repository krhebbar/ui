/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "../../../../index";
import * as DevRev from "../../../../../api/index";
import * as core from "../../../../../core";
import { GroupType } from "../../../../types/GroupType";
import { GroupIngestionSource } from "../../../../types/GroupIngestionSource";
import { GroupMemberType } from "../../../../types/GroupMemberType";
import { ListMode } from "../../../../types/ListMode";

export const GroupsListRequest: core.serialization.Schema<serializers.GroupsListRequest.Raw, DevRev.GroupsListRequest> =
    core.serialization.object({
        cursor: core.serialization.string().optional(),
        groupType: core.serialization.property("group_type", core.serialization.list(GroupType).optional()),
        ingestionSource: core.serialization.property(
            "ingestion_source",
            core.serialization.list(GroupIngestionSource).optional()
        ),
        isDefault: core.serialization.property("is_default", core.serialization.boolean().optional()),
        limit: core.serialization.number().optional(),
        memberType: core.serialization.property("member_type", core.serialization.list(GroupMemberType).optional()),
        mode: ListMode.optional(),
        sortBy: core.serialization.property("sort_by", core.serialization.list(core.serialization.string()).optional()),
    });

export declare namespace GroupsListRequest {
    interface Raw {
        cursor?: string | null;
        group_type?: GroupType.Raw[] | null;
        ingestion_source?: GroupIngestionSource.Raw[] | null;
        is_default?: boolean | null;
        limit?: number | null;
        member_type?: GroupMemberType.Raw[] | null;
        mode?: ListMode.Raw | null;
        sort_by?: string[] | null;
    }
}
