/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "../../../../index";
import * as DevRev from "../../../../../api/index";
import * as core from "../../../../../core";
import { LinksDirection } from "../../../../types/LinksDirection";
import { LinkType } from "../../../../types/LinkType";
import { ListMode } from "../../../../types/ListMode";
import { LinkEndpointType } from "../../../../types/LinkEndpointType";

export const LinksListRequest: core.serialization.Schema<serializers.LinksListRequest.Raw, DevRev.LinksListRequest> =
    core.serialization.object({
        cursor: core.serialization.string().optional(),
        direction: LinksDirection.optional(),
        limit: core.serialization.number().optional(),
        linkType: core.serialization.property("link_type", core.serialization.list(LinkType).optional()),
        mode: ListMode.optional(),
        object: core.serialization.string(),
        objectTypes: core.serialization.property("object_types", core.serialization.list(LinkEndpointType).optional()),
        types: core.serialization.list(LinkType).optional(),
    });

export declare namespace LinksListRequest {
    interface Raw {
        cursor?: string | null;
        direction?: LinksDirection.Raw | null;
        limit?: number | null;
        link_type?: LinkType.Raw[] | null;
        mode?: ListMode.Raw | null;
        object: string;
        object_types?: LinkEndpointType.Raw[] | null;
        types?: LinkType.Raw[] | null;
    }
}
