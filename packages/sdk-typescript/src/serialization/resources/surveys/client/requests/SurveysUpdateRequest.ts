/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "../../../../index";
import * as DevRev from "../../../../../api/index";
import * as core from "../../../../../core";
import { SurveyFieldWithMetadata } from "../../../../types/SurveyFieldWithMetadata";

export const SurveysUpdateRequest: core.serialization.Schema<
    serializers.SurveysUpdateRequest.Raw,
    DevRev.SurveysUpdateRequest
> = core.serialization.object({
    description: core.serialization.string().optional(),
    header: core.serialization.string().optional(),
    id: core.serialization.string(),
    introductoryText: core.serialization.property("introductory_text", core.serialization.string().optional()),
    name: core.serialization.string().optional(),
    responseText: core.serialization.property("response_text", core.serialization.string().optional()),
    schemaWithMetadata: core.serialization.property(
        "schema_with_metadata",
        core.serialization.list(SurveyFieldWithMetadata).optional()
    ),
    survey: core.serialization.string().optional(),
    title: core.serialization.string().optional(),
});

export declare namespace SurveysUpdateRequest {
    interface Raw {
        description?: string | null;
        header?: string | null;
        id: string;
        introductory_text?: string | null;
        name?: string | null;
        response_text?: string | null;
        schema_with_metadata?: SurveyFieldWithMetadata.Raw[] | null;
        survey?: string | null;
        title?: string | null;
    }
}
