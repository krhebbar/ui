/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "../../../../index";
import * as DevRev from "../../../../../api/index";
import * as core from "../../../../../core";
import { MeetingChannel } from "../../../../types/MeetingChannel";
import { MeetingState } from "../../../../types/MeetingState";
import { SetTagWithValue } from "../../../../types/SetTagWithValue";

export const MeetingsCreateRequest: core.serialization.Schema<
    serializers.MeetingsCreateRequest.Raw,
    DevRev.MeetingsCreateRequest
> = core.serialization.object({
    channel: MeetingChannel,
    customFields: core.serialization.property(
        "custom_fields",
        core.serialization.record(core.serialization.string(), core.serialization.unknown()).optional()
    ),
    description: core.serialization.string().optional(),
    endedDate: core.serialization.property("ended_date", core.serialization.date()),
    externalRef: core.serialization.property("external_ref", core.serialization.string().optional()),
    externalUrl: core.serialization.property("external_url", core.serialization.string().optional()),
    members: core.serialization.list(core.serialization.string()),
    organizer: core.serialization.string().optional(),
    parent: core.serialization.string().optional(),
    recordingUrl: core.serialization.property("recording_url", core.serialization.string().optional()),
    scheduledDate: core.serialization.property("scheduled_date", core.serialization.date()),
    state: MeetingState,
    tags: core.serialization.list(SetTagWithValue).optional(),
    title: core.serialization.string(),
});

export declare namespace MeetingsCreateRequest {
    interface Raw {
        channel: MeetingChannel.Raw;
        custom_fields?: Record<string, unknown> | null;
        description?: string | null;
        ended_date: string;
        external_ref?: string | null;
        external_url?: string | null;
        members: string[];
        organizer?: string | null;
        parent?: string | null;
        recording_url?: string | null;
        scheduled_date: string;
        state: MeetingState.Raw;
        tags?: SetTagWithValue.Raw[] | null;
        title: string;
    }
}
