/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "../../../../index";
import * as DevRev from "../../../../../api/index";
import * as core from "../../../../../core";
import { SearchHybridNamespace } from "../../../../types/SearchHybridNamespace";

export const SearchHybridRequest: core.serialization.Schema<
    serializers.SearchHybridRequest.Raw,
    DevRev.SearchHybridRequest
> = core.serialization.object({
    limit: core.serialization.number().optional(),
    namespace: SearchHybridNamespace,
    query: core.serialization.string(),
    semanticWeight: core.serialization.property("semantic_weight", core.serialization.number().optional()),
});

export declare namespace SearchHybridRequest {
    interface Raw {
        limit?: number | null;
        namespace: SearchHybridNamespace.Raw;
        query: string;
        semantic_weight?: number | null;
    }
}
