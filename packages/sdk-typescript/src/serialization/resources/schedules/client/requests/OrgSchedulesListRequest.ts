/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "../../../../index";
import * as DevRev from "../../../../../api/index";
import * as core from "../../../../../core";
import { ListMode } from "../../../../types/ListMode";
import { OrgScheduleStatus } from "../../../../types/OrgScheduleStatus";
import { DateFilter } from "../../../../types/DateFilter";

export const OrgSchedulesListRequest: core.serialization.Schema<
    serializers.OrgSchedulesListRequest.Raw,
    DevRev.OrgSchedulesListRequest
> = core.serialization.object({
    createdById: core.serialization.property(
        "created_by_id",
        core.serialization.list(core.serialization.string()).optional()
    ),
    cursor: core.serialization.string().optional(),
    limit: core.serialization.number().optional(),
    mode: ListMode.optional(),
    status: core.serialization.list(OrgScheduleStatus).optional(),
    validUntil: core.serialization.property("valid_until", DateFilter.optional()),
});

export declare namespace OrgSchedulesListRequest {
    interface Raw {
        created_by_id?: string[] | null;
        cursor?: string | null;
        limit?: number | null;
        mode?: ListMode.Raw | null;
        status?: OrgScheduleStatus.Raw[] | null;
        valid_until?: DateFilter.Raw | null;
    }
}
