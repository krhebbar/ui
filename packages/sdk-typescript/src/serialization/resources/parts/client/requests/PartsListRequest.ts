/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "../../../../index";
import * as DevRev from "../../../../../api/index";
import * as core from "../../../../../core";
import { PartType } from "../../../../types/PartType";
import { ListMode } from "../../../../types/ListMode";
import { ParentPartFilter } from "../../../../types/ParentPartFilter";

export const PartsListRequest: core.serialization.Schema<serializers.PartsListRequest.Raw, DevRev.PartsListRequest> =
    core.serialization.object({
        type: core.serialization.list(PartType).optional(),
        createdBy: core.serialization.property(
            "created_by",
            core.serialization.list(core.serialization.string()).optional()
        ),
        cursor: core.serialization.string().optional(),
        limit: core.serialization.number().optional(),
        mode: ListMode.optional(),
        name: core.serialization.list(core.serialization.string()).optional(),
        ownedBy: core.serialization.property(
            "owned_by",
            core.serialization.list(core.serialization.string()).optional()
        ),
        parentPart: core.serialization.property("parent_part", ParentPartFilter.optional()),
    });

export declare namespace PartsListRequest {
    interface Raw {
        type?: PartType.Raw[] | null;
        created_by?: string[] | null;
        cursor?: string | null;
        limit?: number | null;
        mode?: ListMode.Raw | null;
        name?: string[] | null;
        owned_by?: string[] | null;
        parent_part?: ParentPartFilter.Raw | null;
    }
}
