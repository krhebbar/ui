/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "../../../../index";
import * as DevRev from "../../../../../api/index";
import * as core from "../../../../../core";
import { CustomSchemaSpec } from "../../../../types/CustomSchemaSpec";
import { SetTagWithValue } from "../../../../types/SetTagWithValue";

export const AccountsCreateRequest: core.serialization.Schema<
    serializers.AccountsCreateRequest.Raw,
    DevRev.AccountsCreateRequest
> = core.serialization.object({
    artifacts: core.serialization.list(core.serialization.string()).optional(),
    customFields: core.serialization.property(
        "custom_fields",
        core.serialization.record(core.serialization.string(), core.serialization.unknown()).optional()
    ),
    customSchemaSpec: core.serialization.property("custom_schema_spec", CustomSchemaSpec.optional()),
    description: core.serialization.string().optional(),
    displayName: core.serialization.property("display_name", core.serialization.string()),
    domains: core.serialization.list(core.serialization.string()).optional(),
    externalRefs: core.serialization.property(
        "external_refs",
        core.serialization.list(core.serialization.string()).optional()
    ),
    ownedBy: core.serialization.property("owned_by", core.serialization.list(core.serialization.string()).optional()),
    schemaFragmentIds: core.serialization.property(
        "schema_fragment_ids",
        core.serialization.list(core.serialization.string()).optional()
    ),
    tags: core.serialization.list(SetTagWithValue).optional(),
    tier: core.serialization.string().optional(),
    websites: core.serialization.list(core.serialization.string()).optional(),
});

export declare namespace AccountsCreateRequest {
    interface Raw {
        artifacts?: string[] | null;
        custom_fields?: Record<string, unknown> | null;
        custom_schema_spec?: CustomSchemaSpec.Raw | null;
        description?: string | null;
        display_name: string;
        domains?: string[] | null;
        external_refs?: string[] | null;
        owned_by?: string[] | null;
        schema_fragment_ids?: string[] | null;
        tags?: SetTagWithValue.Raw[] | null;
        tier?: string | null;
        websites?: string[] | null;
    }
}
