/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "../index";
import * as DevRev from "../../api/index";
import * as core from "../../core";
import { OrgScheduleInterval } from "./OrgScheduleInterval";
import { OrgScheduleFragmentStatus } from "./OrgScheduleFragmentStatus";
import { AtomBase } from "./AtomBase";

export const OrgScheduleFragment: core.serialization.ObjectSchema<
    serializers.OrgScheduleFragment.Raw,
    DevRev.OrgScheduleFragment
> = core.serialization
    .object({
        from: core.serialization.date().optional(),
        intervals: core.serialization.list(OrgScheduleInterval).optional(),
        name: core.serialization.string().optional(),
        regionCodes: core.serialization.property(
            "region_codes",
            core.serialization.list(core.serialization.string()).optional()
        ),
        status: OrgScheduleFragmentStatus,
        to: core.serialization.date().optional(),
    })
    .extend(AtomBase);

export declare namespace OrgScheduleFragment {
    interface Raw extends AtomBase.Raw {
        from?: string | null;
        intervals?: OrgScheduleInterval.Raw[] | null;
        name?: string | null;
        region_codes?: string[] | null;
        status: OrgScheduleFragmentStatus.Raw;
        to?: string | null;
    }
}
