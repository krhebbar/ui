/**
 * This file was auto-generated by Fern from our API Definition.
 */

import { CustomSchemaSpec } from "./CustomSchemaSpec";
import * as core from "../../core";
import * as serializers from "../index";
import * as DevRev from "../../api/index";
import { PartsCreateRequestCapability } from "./PartsCreateRequestCapability";
import { PartsCreateRequestEnhancement } from "./PartsCreateRequestEnhancement";
import { PartsCreateRequestFeature } from "./PartsCreateRequestFeature";
import { PartsCreateRequestProduct } from "./PartsCreateRequestProduct";

const _Base = core.serialization.object({
    artifacts: core.serialization.list(core.serialization.string()).optional(),
    customFields: core.serialization.property(
        "custom_fields",
        core.serialization.record(core.serialization.string(), core.serialization.unknown()).optional()
    ),
    customSchemaFragments: core.serialization.property(
        "custom_schema_fragments",
        core.serialization.list(core.serialization.string()).optional()
    ),
    customSchemaSpec: core.serialization.property("custom_schema_spec", CustomSchemaSpec.optional()),
    description: core.serialization.string().optional(),
    name: core.serialization.string(),
    ownedBy: core.serialization.property("owned_by", core.serialization.list(core.serialization.string())),
});
export const PartsCreateRequest: core.serialization.Schema<
    serializers.PartsCreateRequest.Raw,
    DevRev.PartsCreateRequest
> = core.serialization
    .union("type", {
        capability: PartsCreateRequestCapability.extend(_Base),
        enhancement: PartsCreateRequestEnhancement.extend(_Base),
        feature: PartsCreateRequestFeature.extend(_Base),
        product: core.serialization
            .object({
                value: PartsCreateRequestProduct,
            })
            .extend(_Base),
    })
    .transform<DevRev.PartsCreateRequest>({
        transform: (value) => value,
        untransform: (value) => value,
    });

export declare namespace PartsCreateRequest {
    type Raw =
        | PartsCreateRequest.Capability
        | PartsCreateRequest.Enhancement
        | PartsCreateRequest.Feature
        | PartsCreateRequest.Product;

    interface Capability extends _Base, PartsCreateRequestCapability.Raw {
        type: "capability";
    }

    interface Enhancement extends _Base, PartsCreateRequestEnhancement.Raw {
        type: "enhancement";
    }

    interface Feature extends _Base, PartsCreateRequestFeature.Raw {
        type: "feature";
    }

    interface Product extends _Base {
        type: "product";
        value: PartsCreateRequestProduct.Raw;
    }

    interface _Base {
        artifacts?: string[] | null;
        custom_fields?: Record<string, unknown> | null;
        custom_schema_fragments?: string[] | null;
        custom_schema_spec?: CustomSchemaSpec.Raw | null;
        description?: string | null;
        name: string;
        owned_by: string[];
    }
}
