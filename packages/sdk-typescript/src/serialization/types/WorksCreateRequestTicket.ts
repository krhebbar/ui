/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "../index";
import * as DevRev from "../../api/index";
import * as core from "../../core";
import { TicketChannels } from "./TicketChannels";
import { TicketSeverity } from "./TicketSeverity";

export const WorksCreateRequestTicket: core.serialization.ObjectSchema<
    serializers.WorksCreateRequestTicket.Raw,
    DevRev.WorksCreateRequestTicket
> = core.serialization.object({
    channels: core.serialization.list(TicketChannels).optional(),
    group: core.serialization.string().optional(),
    isSpam: core.serialization.property("is_spam", core.serialization.boolean().optional()),
    needsResponse: core.serialization.property("needs_response", core.serialization.boolean().optional()),
    revOrg: core.serialization.property("rev_org", core.serialization.string().optional()),
    severity: TicketSeverity.optional(),
    sourceChannel: core.serialization.property("source_channel", core.serialization.string().optional()),
});

export declare namespace WorksCreateRequestTicket {
    interface Raw {
        channels?: TicketChannels.Raw[] | null;
        group?: string | null;
        is_spam?: boolean | null;
        needs_response?: boolean | null;
        rev_org?: string | null;
        severity?: TicketSeverity.Raw | null;
        source_channel?: string | null;
    }
}
