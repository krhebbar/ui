/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "../index";
import * as DevRev from "../../api/index";
import * as core from "../../core";
import { AuthTokenRequestedTokenType } from "./AuthTokenRequestedTokenType";
import { AuthTokenStatus } from "./AuthTokenStatus";
import { AtomBase } from "./AtomBase";

export const AuthToken: core.serialization.ObjectSchema<serializers.AuthToken.Raw, DevRev.AuthToken> =
    core.serialization
        .object({
            clientId: core.serialization.property("client_id", core.serialization.string().optional()),
            expiresAt: core.serialization.property("expires_at", core.serialization.date().optional()),
            issuedAt: core.serialization.property("issued_at", core.serialization.date().optional()),
            requestedTokenType: core.serialization.property(
                "requested_token_type",
                AuthTokenRequestedTokenType.optional()
            ),
            scopes: core.serialization.list(core.serialization.string()).optional(),
            status: AuthTokenStatus.optional(),
            subject: core.serialization.string().optional(),
            tokenHint: core.serialization.property("token_hint", core.serialization.string().optional()),
        })
        .extend(AtomBase);

export declare namespace AuthToken {
    interface Raw extends AtomBase.Raw {
        client_id?: string | null;
        expires_at?: string | null;
        issued_at?: string | null;
        requested_token_type?: AuthTokenRequestedTokenType.Raw | null;
        scopes?: string[] | null;
        status?: AuthTokenStatus.Raw | null;
        subject?: string | null;
        token_hint?: string | null;
    }
}
