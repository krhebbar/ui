/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "../index";
import * as DevRev from "../../api/index";
import * as core from "../../core";
import { AtomBase } from "./AtomBase";

export const QuestionAnswer: core.serialization.ObjectSchema<serializers.QuestionAnswer.Raw, DevRev.QuestionAnswer> =
    core.serialization
        .object({
            answer: core.serialization.string().optional(),
            question: core.serialization.string().optional(),
            suggestedAnswer: core.serialization.property("suggested_answer", core.serialization.string().optional()),
            suggestedForDeletion: core.serialization.property(
                "suggested_for_deletion",
                core.serialization.boolean().optional()
            ),
            topic: core.serialization.string().optional(),
            verified: core.serialization.boolean().optional(),
        })
        .extend(AtomBase);

export declare namespace QuestionAnswer {
    interface Raw extends AtomBase.Raw {
        answer?: string | null;
        question?: string | null;
        suggested_answer?: string | null;
        suggested_for_deletion?: boolean | null;
        topic?: string | null;
        verified?: boolean | null;
    }
}
