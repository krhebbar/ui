/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "../index";
import * as DevRev from "../../api/index";
import * as core from "../../core";
import { SchemaFieldDescriptor } from "./SchemaFieldDescriptor";

export const FieldDelta: core.serialization.ObjectSchema<serializers.FieldDelta.Raw, DevRev.FieldDelta> =
    core.serialization.object({
        fieldDescriptor: core.serialization.property("field_descriptor", SchemaFieldDescriptor.optional()),
        name: core.serialization.string().optional(),
        newValue: core.serialization.property(
            "new_value",
            core.serialization.lazy(() => serializers.FieldValue).optional()
        ),
        oldValue: core.serialization.property(
            "old_value",
            core.serialization.lazy(() => serializers.FieldValue).optional()
        ),
    });

export declare namespace FieldDelta {
    interface Raw {
        field_descriptor?: SchemaFieldDescriptor.Raw | null;
        name?: string | null;
        new_value?: serializers.FieldValue.Raw | null;
        old_value?: serializers.FieldValue.Raw | null;
    }
}
