/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "../index";
import * as DevRev from "../../api/index";
import * as core from "../../core";
import { EventSourceSetupInstructions } from "./EventSourceSetupInstructions";
import { EventSourceStatus } from "./EventSourceStatus";
import { AtomBase } from "./AtomBase";

export const EventSource: core.serialization.ObjectSchema<serializers.EventSource.Raw, DevRev.EventSource> =
    core.serialization
        .object({
            config: core.serialization.record(core.serialization.string(), core.serialization.unknown()).optional(),
            name: core.serialization.string().optional(),
            setupInstructions: core.serialization.property(
                "setup_instructions",
                EventSourceSetupInstructions.optional()
            ),
            status: EventSourceStatus.optional(),
            triggerUrl: core.serialization.property("trigger_url", core.serialization.string().optional()),
        })
        .extend(AtomBase);

export declare namespace EventSource {
    interface Raw extends AtomBase.Raw {
        config?: Record<string, unknown> | null;
        name?: string | null;
        setup_instructions?: EventSourceSetupInstructions.Raw | null;
        status?: EventSourceStatus.Raw | null;
        trigger_url?: string | null;
    }
}
