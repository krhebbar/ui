/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "../index";
import * as DevRev from "../../api/index";
import * as core from "../../core";
import { ClientContext } from "./ClientContext";

export const TrackEvent: core.serialization.ObjectSchema<serializers.TrackEvent.Raw, DevRev.TrackEvent> =
    core.serialization.object({
        clientContext: core.serialization.property("client_context", ClientContext.optional()),
        eventId: core.serialization.property("event_id", core.serialization.string().optional()),
        eventTime: core.serialization.property("event_time", core.serialization.date().optional()),
        name: core.serialization.string(),
        payload: core.serialization.record(core.serialization.string(), core.serialization.unknown()),
    });

export declare namespace TrackEvent {
    interface Raw {
        client_context?: ClientContext.Raw | null;
        event_id?: string | null;
        event_time?: string | null;
        name: string;
        payload: Record<string, unknown>;
    }
}
