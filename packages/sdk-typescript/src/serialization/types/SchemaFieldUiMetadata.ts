/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "../index";
import * as DevRev from "../../api/index";
import * as core from "../../core";
import { SchemaFieldCreateViewUiMetadata } from "./SchemaFieldCreateViewUiMetadata";
import { SchemaFieldDetailViewUiMetadata } from "./SchemaFieldDetailViewUiMetadata";
import { SchemaFieldFilterViewUiMetadata } from "./SchemaFieldFilterViewUiMetadata";
import { SchemaFieldListViewUiMetadata } from "./SchemaFieldListViewUiMetadata";
import { SchemaFieldSummaryViewUiMetadata } from "./SchemaFieldSummaryViewUiMetadata";

export const SchemaFieldUiMetadata: core.serialization.ObjectSchema<
    serializers.SchemaFieldUiMetadata.Raw,
    DevRev.SchemaFieldUiMetadata
> = core.serialization.object({
    createView: core.serialization.property("create_view", SchemaFieldCreateViewUiMetadata.optional()),
    detailView: core.serialization.property("detail_view", SchemaFieldDetailViewUiMetadata.optional()),
    displayName: core.serialization.property("display_name", core.serialization.string().optional()),
    filterView: core.serialization.property("filter_view", SchemaFieldFilterViewUiMetadata.optional()),
    groupName: core.serialization.property("group_name", core.serialization.string().optional()),
    isActiveInDetailView: core.serialization.property(
        "is_active_in_detail_view",
        core.serialization.boolean().optional()
    ),
    isBulkActionEnabled: core.serialization.property("is_bulk_action_enabled", core.serialization.boolean().optional()),
    isCurrencyField: core.serialization.property("is_currency_field", core.serialization.boolean().optional()),
    isGroupable: core.serialization.property("is_groupable", core.serialization.boolean().optional()),
    isHidden: core.serialization.property("is_hidden", core.serialization.boolean().optional()),
    isHiddenDuringCreate: core.serialization.property(
        "is_hidden_during_create",
        core.serialization.boolean().optional()
    ),
    isReadOnly: core.serialization.property("is_read_only", core.serialization.boolean().optional()),
    isRequired: core.serialization.property("is_required", core.serialization.boolean().optional()),
    isShownInSummary: core.serialization.property("is_shown_in_summary", core.serialization.boolean().optional()),
    isSortable: core.serialization.property("is_sortable", core.serialization.boolean().optional()),
    listView: core.serialization.property("list_view", SchemaFieldListViewUiMetadata.optional()),
    order: core.serialization.number().optional(),
    placeholder: core.serialization.string().optional(),
    summaryView: core.serialization.property("summary_view", SchemaFieldSummaryViewUiMetadata.optional()),
    tooltip: core.serialization.string().optional(),
    unit: core.serialization.string().optional(),
});

export declare namespace SchemaFieldUiMetadata {
    interface Raw {
        create_view?: SchemaFieldCreateViewUiMetadata.Raw | null;
        detail_view?: SchemaFieldDetailViewUiMetadata.Raw | null;
        display_name?: string | null;
        filter_view?: SchemaFieldFilterViewUiMetadata.Raw | null;
        group_name?: string | null;
        is_active_in_detail_view?: boolean | null;
        is_bulk_action_enabled?: boolean | null;
        is_currency_field?: boolean | null;
        is_groupable?: boolean | null;
        is_hidden?: boolean | null;
        is_hidden_during_create?: boolean | null;
        is_read_only?: boolean | null;
        is_required?: boolean | null;
        is_shown_in_summary?: boolean | null;
        is_sortable?: boolean | null;
        list_view?: SchemaFieldListViewUiMetadata.Raw | null;
        order?: number | null;
        placeholder?: string | null;
        summary_view?: SchemaFieldSummaryViewUiMetadata.Raw | null;
        tooltip?: string | null;
        unit?: string | null;
    }
}
