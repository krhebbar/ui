/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "../index";
import * as DevRev from "../../api/index";
import * as core from "../../core";
import { PartSummary } from "./PartSummary";
import { ArticleType } from "./ArticleType";
import { UserSummary } from "./UserSummary";
import { ArtifactSummary } from "./ArtifactSummary";
import { DirectorySummary } from "./DirectorySummary";
import { Resource } from "./Resource";
import { EnumValue } from "./EnumValue";
import { SyncMetadata } from "./SyncMetadata";
import { AtomBase } from "./AtomBase";

export const Article: core.serialization.ObjectSchema<serializers.Article.Raw, DevRev.Article> = core.serialization
    .object({
        appliesToParts: core.serialization.property("applies_to_parts", core.serialization.list(PartSummary)),
        articleType: core.serialization.property("article_type", ArticleType.optional()),
        authoredBy: core.serialization.property("authored_by", core.serialization.list(UserSummary).optional()),
        description: core.serialization.string().optional(),
        extractedContent: core.serialization.property(
            "extracted_content",
            core.serialization.list(ArtifactSummary).optional()
        ),
        numDownvotes: core.serialization.property("num_downvotes", core.serialization.number().optional()),
        numUpvotes: core.serialization.property("num_upvotes", core.serialization.number().optional()),
        ownedBy: core.serialization.property("owned_by", core.serialization.list(UserSummary)),
        parent: DirectorySummary.optional(),
        rank: core.serialization.string().optional(),
        resource: Resource.optional(),
        scope: EnumValue.optional(),
        syncMetadata: core.serialization.property("sync_metadata", SyncMetadata.optional()),
        title: core.serialization.string().optional(),
    })
    .extend(AtomBase);

export declare namespace Article {
    interface Raw extends AtomBase.Raw {
        applies_to_parts: PartSummary.Raw[];
        article_type?: ArticleType.Raw | null;
        authored_by?: UserSummary.Raw[] | null;
        description?: string | null;
        extracted_content?: ArtifactSummary.Raw[] | null;
        num_downvotes?: number | null;
        num_upvotes?: number | null;
        owned_by: UserSummary.Raw[];
        parent?: DirectorySummary.Raw | null;
        rank?: string | null;
        resource?: Resource.Raw | null;
        scope?: EnumValue.Raw | null;
        sync_metadata?: SyncMetadata.Raw | null;
        title?: string | null;
    }
}
