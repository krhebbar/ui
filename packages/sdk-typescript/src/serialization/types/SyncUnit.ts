/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "../index";
import * as DevRev from "../../api/index";
import * as core from "../../core";
import { ExternalSystemType } from "./ExternalSystemType";
import { SyncRun } from "./SyncRun";
import { SyncUnitSyncType } from "./SyncUnitSyncType";
import { AtomBase } from "./AtomBase";

export const SyncUnit: core.serialization.ObjectSchema<serializers.SyncUnit.Raw, DevRev.SyncUnit> = core.serialization
    .object({
        externalSystemType: core.serialization.property("external_system_type", ExternalSystemType.optional()),
        isArchived: core.serialization.property("is_archived", core.serialization.boolean().optional()),
        name: core.serialization.string().optional(),
        syncRun: core.serialization.property("sync_run", SyncRun.optional()),
        syncType: core.serialization.property("sync_type", SyncUnitSyncType.optional()),
    })
    .extend(AtomBase);

export declare namespace SyncUnit {
    interface Raw extends AtomBase.Raw {
        external_system_type?: ExternalSystemType.Raw | null;
        is_archived?: boolean | null;
        name?: string | null;
        sync_run?: SyncRun.Raw | null;
        sync_type?: SyncUnitSyncType.Raw | null;
    }
}
