/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "../index";
import * as DevRev from "../../api/index";
import * as core from "../../core";
import { AggregationDetail } from "./AggregationDetail";
import { UomMetricScope } from "./UomMetricScope";
import { PartSummary } from "./PartSummary";
import { Unit } from "./Unit";
import { AtomBase } from "./AtomBase";

export const Uom: core.serialization.ObjectSchema<serializers.Uom.Raw, DevRev.Uom> = core.serialization
    .object({
        aggregationDetails: core.serialization.property("aggregation_details", AggregationDetail),
        description: core.serialization.string().optional(),
        dimensions: core.serialization.list(core.serialization.string()).optional(),
        isEnabled: core.serialization.property("is_enabled", core.serialization.boolean()),
        metricName: core.serialization.property("metric_name", core.serialization.string()),
        metricScope: core.serialization.property("metric_scope", UomMetricScope),
        name: core.serialization.string(),
        part: PartSummary.optional(),
        product: PartSummary,
        unit: Unit,
    })
    .extend(AtomBase);

export declare namespace Uom {
    interface Raw extends AtomBase.Raw {
        aggregation_details: AggregationDetail.Raw;
        description?: string | null;
        dimensions?: string[] | null;
        is_enabled: boolean;
        metric_name: string;
        metric_scope: UomMetricScope.Raw;
        name: string;
        part?: PartSummary.Raw | null;
        product: PartSummary.Raw;
        unit: Unit.Raw;
    }
}
