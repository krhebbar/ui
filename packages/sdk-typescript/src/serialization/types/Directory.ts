/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "../index";
import * as DevRev from "../../api/index";
import * as core from "../../core";
import { ArtifactSummary } from "./ArtifactSummary";
import { DirectorySummary } from "./DirectorySummary";
import { TagWithValue } from "./TagWithValue";
import { AtomBase } from "./AtomBase";

export const Directory: core.serialization.ObjectSchema<serializers.Directory.Raw, DevRev.Directory> =
    core.serialization
        .object({
            body: ArtifactSummary.optional(),
            description: core.serialization.string().optional(),
            icon: core.serialization.string().optional(),
            parent: DirectorySummary.optional(),
            published: core.serialization.boolean().optional(),
            rank: core.serialization.string().optional(),
            tags: core.serialization.list(TagWithValue).optional(),
            thumbnail: ArtifactSummary.optional(),
            title: core.serialization.string().optional(),
        })
        .extend(AtomBase);

export declare namespace Directory {
    interface Raw extends AtomBase.Raw {
        body?: ArtifactSummary.Raw | null;
        description?: string | null;
        icon?: string | null;
        parent?: DirectorySummary.Raw | null;
        published?: boolean | null;
        rank?: string | null;
        tags?: TagWithValue.Raw[] | null;
        thumbnail?: ArtifactSummary.Raw | null;
        title?: string | null;
    }
}
