/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as core from "../../core";
import * as serializers from "../index";
import * as DevRev from "../../api/index";
import { SendNotificationGenericNotificationEntry } from "./SendNotificationGenericNotificationEntry";

const _Base = core.serialization.object({
    parent: core.serialization.string().optional(),
    receiver: core.serialization.string(),
    timestamp: core.serialization.date().optional(),
});
export const SendNotification: core.serialization.Schema<serializers.SendNotification.Raw, DevRev.SendNotification> =
    core.serialization
        .union("type", {
            generic_notification: SendNotificationGenericNotificationEntry.extend(_Base),
        })
        .transform<DevRev.SendNotification>({
            transform: (value) => value,
            untransform: (value) => value,
        });

export declare namespace SendNotification {
    type Raw = SendNotification.GenericNotification;

    interface GenericNotification extends _Base, SendNotificationGenericNotificationEntry.Raw {
        type: "generic_notification";
    }

    interface _Base {
        parent?: string | null;
        receiver: string;
        timestamp?: string | null;
    }
}
