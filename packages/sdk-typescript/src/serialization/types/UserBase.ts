/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "../index";
import * as DevRev from "../../api/index";
import * as core from "../../core";
import { ArtifactSummary } from "./ArtifactSummary";
import { UserState } from "./UserState";
import { AtomBase } from "./AtomBase";

export const UserBase: core.serialization.ObjectSchema<serializers.UserBase.Raw, DevRev.UserBase> = core.serialization
    .object({
        displayName: core.serialization.property("display_name", core.serialization.string().optional()),
        displayPicture: core.serialization.property("display_picture", ArtifactSummary.optional()),
        email: core.serialization.string().optional(),
        fullName: core.serialization.property("full_name", core.serialization.string().optional()),
        phoneNumbers: core.serialization.property(
            "phone_numbers",
            core.serialization.list(core.serialization.string()).optional()
        ),
        state: UserState.optional(),
    })
    .extend(AtomBase);

export declare namespace UserBase {
    interface Raw extends AtomBase.Raw {
        display_name?: string | null;
        display_picture?: ArtifactSummary.Raw | null;
        email?: string | null;
        full_name?: string | null;
        phone_numbers?: string[] | null;
        state?: UserState.Raw | null;
    }
}
