/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "../index";
import * as DevRev from "../../api/index";
import * as core from "../../core";
import { DateTimePreset } from "./DateTimePreset";
import { DateTimeFilter } from "./DateTimeFilter";

export const DateFilter: core.serialization.Schema<serializers.DateFilter.Raw, DevRev.DateFilter> = core.serialization
    .union("type", {
        preset: core.serialization.object({
            value: DateTimePreset,
        }),
        range: DateTimeFilter,
    })
    .transform<DevRev.DateFilter>({
        transform: (value) => value,
        untransform: (value) => value,
    });

export declare namespace DateFilter {
    type Raw = DateFilter.Preset | DateFilter.Range;

    interface Preset {
        type: "preset";
        value: DateTimePreset.Raw;
    }

    interface Range extends DateTimeFilter.Raw {
        type: "range";
    }
}
