/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "../index";
import * as DevRev from "../../api/index";
import * as core from "../../core";
import { ArticleSummary } from "./ArticleSummary";
import { QuestionAnswerSummary } from "./QuestionAnswerSummary";

export const TuringSources: core.serialization.Schema<serializers.TuringSources.Raw, DevRev.TuringSources> =
    core.serialization
        .union("type", {
            article: ArticleSummary,
            question_answer: QuestionAnswerSummary,
        })
        .transform<DevRev.TuringSources>({
            transform: (value) => value,
            untransform: (value) => value,
        });

export declare namespace TuringSources {
    type Raw = TuringSources.Article | TuringSources.QuestionAnswer;

    interface Article extends ArticleSummary.Raw {
        type: "article";
    }

    interface QuestionAnswer extends QuestionAnswerSummary.Raw {
        type: "question_answer";
    }
}
