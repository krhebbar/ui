/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "../index";
import * as DevRev from "../../api/index";
import * as core from "../../core";
import { SyncMetadataFilterSyncInFilterStatus } from "./SyncMetadataFilterSyncInFilterStatus";
import { DateFilter } from "./DateFilter";

export const SyncMetadataFilterSyncInFilter: core.serialization.ObjectSchema<
    serializers.SyncMetadataFilterSyncInFilter.Raw,
    DevRev.SyncMetadataFilterSyncInFilter
> = core.serialization.object({
    status: core.serialization.list(SyncMetadataFilterSyncInFilterStatus).optional(),
    syncDate: core.serialization.property("sync_date", DateFilter.optional()),
    syncUnit: core.serialization.property("sync_unit", core.serialization.list(core.serialization.string()).optional()),
});

export declare namespace SyncMetadataFilterSyncInFilter {
    interface Raw {
        status?: SyncMetadataFilterSyncInFilterStatus.Raw[] | null;
        sync_date?: DateFilter.Raw | null;
        sync_unit?: string[] | null;
    }
}
