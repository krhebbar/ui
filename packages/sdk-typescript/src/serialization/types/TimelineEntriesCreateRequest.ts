/**
 * This file was auto-generated by Fern from our API Definition.
 */

import { TimelineEntriesCollection } from "./TimelineEntriesCollection";
import { TimelineEntryVisibility } from "./TimelineEntryVisibility";
import * as core from "../../core";
import * as serializers from "../index";
import * as DevRev from "../../api/index";
import { TimelineEntriesCreateRequestTimelineComment } from "./TimelineEntriesCreateRequestTimelineComment";

const _Base = core.serialization.object({
    collections: core.serialization.list(TimelineEntriesCollection).optional(),
    expiresAt: core.serialization.property("expires_at", core.serialization.date().optional()),
    labels: core.serialization.list(core.serialization.string()).optional(),
    object: core.serialization.string(),
    privateTo: core.serialization.property(
        "private_to",
        core.serialization.list(core.serialization.string()).optional()
    ),
    visibility: TimelineEntryVisibility.optional(),
});
export const TimelineEntriesCreateRequest: core.serialization.Schema<
    serializers.TimelineEntriesCreateRequest.Raw,
    DevRev.TimelineEntriesCreateRequest
> = core.serialization
    .union("type", {
        timeline_comment: TimelineEntriesCreateRequestTimelineComment.extend(_Base),
    })
    .transform<DevRev.TimelineEntriesCreateRequest>({
        transform: (value) => value,
        untransform: (value) => value,
    });

export declare namespace TimelineEntriesCreateRequest {
    type Raw = TimelineEntriesCreateRequest.TimelineComment;

    interface TimelineComment extends _Base, TimelineEntriesCreateRequestTimelineComment.Raw {
        type: "timeline_comment";
    }

    interface _Base {
        collections?: TimelineEntriesCollection.Raw[] | null;
        expires_at?: string | null;
        labels?: string[] | null;
        object: string;
        private_to?: string[] | null;
        visibility?: TimelineEntryVisibility.Raw | null;
    }
}
