/**
 * This file was auto-generated by Fern from our API Definition.
 */

import { SnapWidgetNamespace } from "./SnapWidgetNamespace";
import { SnapWidgetStatus } from "./SnapWidgetStatus";
import * as core from "../../core";
import * as serializers from "../index";
import * as DevRev from "../../api/index";
import { CreateEmailPreviewWidget } from "./CreateEmailPreviewWidget";

const _Base = core.serialization.object({
    name: core.serialization.string(),
    namespace: SnapWidgetNamespace.optional(),
    status: SnapWidgetStatus.optional(),
});
export const SnapWidgetsCreateRequest: core.serialization.Schema<
    serializers.SnapWidgetsCreateRequest.Raw,
    DevRev.SnapWidgetsCreateRequest
> = core.serialization
    .union("type", {
        email_preview: CreateEmailPreviewWidget.extend(_Base),
    })
    .transform<DevRev.SnapWidgetsCreateRequest>({
        transform: (value) => value,
        untransform: (value) => value,
    });

export declare namespace SnapWidgetsCreateRequest {
    type Raw = SnapWidgetsCreateRequest.EmailPreview;

    interface EmailPreview extends _Base, CreateEmailPreviewWidget.Raw {
        type: "email_preview";
    }

    interface _Base {
        name: string;
        namespace?: SnapWidgetNamespace.Raw | null;
        status?: SnapWidgetStatus.Raw | null;
    }
}
