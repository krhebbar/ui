/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "../index";
import * as DevRev from "../../api/index";
import * as core from "../../core";
import { ExternalSystemType } from "./ExternalSystemType";
import { SyncRunSummary } from "./SyncRunSummary";
import { SyncUnitSyncType } from "./SyncUnitSyncType";
import { AtomBaseSummary } from "./AtomBaseSummary";

export const SyncUnitSummary: core.serialization.ObjectSchema<serializers.SyncUnitSummary.Raw, DevRev.SyncUnitSummary> =
    core.serialization
        .object({
            externalSystemType: core.serialization.property("external_system_type", ExternalSystemType.optional()),
            isArchived: core.serialization.property("is_archived", core.serialization.boolean().optional()),
            name: core.serialization.string().optional(),
            syncRun: core.serialization.property("sync_run", SyncRunSummary.optional()),
            syncType: core.serialization.property("sync_type", SyncUnitSyncType.optional()),
        })
        .extend(AtomBaseSummary);

export declare namespace SyncUnitSummary {
    interface Raw extends AtomBaseSummary.Raw {
        external_system_type?: ExternalSystemType.Raw | null;
        is_archived?: boolean | null;
        name?: string | null;
        sync_run?: SyncRunSummary.Raw | null;
        sync_type?: SyncUnitSyncType.Raw | null;
    }
}
