/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "../index";
import * as DevRev from "../../api/index";
import * as core from "../../core";
import { DateFilter } from "./DateFilter";
import { SyncRunMode } from "./SyncRunMode";
import { SyncRunStartedBy } from "./SyncRunStartedBy";
import { SyncRunProgressState } from "./SyncRunProgressState";

export const AirdropSyncUnitsHistoryFilter: core.serialization.ObjectSchema<
    serializers.AirdropSyncUnitsHistoryFilter.Raw,
    DevRev.AirdropSyncUnitsHistoryFilter
> = core.serialization.object({
    endedAt: core.serialization.property("ended_at", DateFilter.optional()),
    hasErrorsOrWarnings: core.serialization.property("has_errors_or_warnings", core.serialization.boolean().optional()),
    mode: core.serialization.list(SyncRunMode).optional(),
    startedBy: core.serialization.property("started_by", core.serialization.list(SyncRunStartedBy).optional()),
    state: core.serialization.list(SyncRunProgressState).optional(),
});

export declare namespace AirdropSyncUnitsHistoryFilter {
    interface Raw {
        ended_at?: DateFilter.Raw | null;
        has_errors_or_warnings?: boolean | null;
        mode?: SyncRunMode.Raw[] | null;
        started_by?: SyncRunStartedBy.Raw[] | null;
        state?: SyncRunProgressState.Raw[] | null;
    }
}
