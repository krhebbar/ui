/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as DevRev from "../../../../index";

/**
 * @example
 *     {
 *         groupBy: "group_by"
 *     }
 */
export interface IncidentsGroupRequest {
    acknowledgedDate?: DevRev.DateFilter;
    actualCloseDate?: DevRev.DateFilter;
    /**
     * Filters for incidents that apply to any of the provided parts.
     *
     */
    appliesToParts?: string[];
    /**
     * Filters for incidents created by any of the provided users.
     *
     */
    createdBy?: string[];
    createdDate?: DevRev.DateFilter;
    /**
     * The cursor to resume iteration from. If not provided, then
     * iteration starts from the beginning.
     *
     */
    cursor?: string;
    /** The field to group the incidents by. */
    groupBy: string;
    identifiedDate?: DevRev.DateFilter;
    /**
     * The maximum number of groups to return. If not set, then the
     * default is '10'.
     *
     */
    limit?: number;
    /**
     * The maximum number of incidents to return for an individual group.
     * The default is '50'.
     *
     */
    limitPerGroup?: number;
    mitigatedDate?: DevRev.DateFilter;
    mode?: DevRev.ListMode;
    modifiedDate?: DevRev.DateFilter;
    /**
     * Filters for incidents owned by any of the provided users.
     *
     */
    ownedBy?: string[];
    /** Filters for incidents with any of the provided PIAs. */
    pia?: string[];
    /**
     * Filters for incidents with any of the provided playbooks.
     *
     */
    playbook?: string[];
    /**
     * Filters for incidents with any of the provided related docs.
     *
     */
    relatedDocs?: string[];
    /**
     * Filters for incidents with any of the provided reporters.
     *
     */
    reportedBy?: number[];
    /**
     * Filters for incidents containing any of the provided severities.
     *
     */
    severity?: number[];
    /** Comma-separated fields to sort the incidents by. */
    sortBy?: string[];
    /** Filters for incidents with any of the provided sources. */
    source?: number[];
    /** Filters for incidents in any of the provided stages. */
    stage?: string[];
    /** Filters for incidents with any of the provided subtypes. */
    subtype?: string[];
    targetCloseDate?: DevRev.DateFilter;
    /** Filters for incidents by the provided titles. */
    title?: string[];
}
