/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as DevRev from "../index";

export interface OrgSchedule extends DevRev.AtomBase {
    defaultWeeklyOrgSchedule?: DevRev.WeeklyOrgSchedule;
    /**
     * The schedule must be valid and well-defined for at least this many
     * days in the future, otherwise a warning notification is generated.
     * Default is 0 if not specified.
     */
    minValidDays?: number;
    /** Human-readable name. */
    name?: string;
    /**
     * The list of schedule fragments. It must be an ordered list of
     * contiguous fragments (the next starting when the previous one
     * ends), updates in a published schedule are only allowed to add new
     * ones to the future.
     */
    orgScheduleFragments?: DevRev.OrgScheduleFragmentOverview[];
    status: DevRev.OrgScheduleStatus;
    /**
     * Timezone in which this is defined. Only organization schedules in
     * the same timezone can be directly combined.
     */
    timezone?: string;
    /**
     * Derived field indicating when a valid organization schedule will
     * become invalid. If omitted, the schedule is already invalid. A
     * schedule is valid if it has a weekly schedule for all named periods
     * for all its schedule fragments, and if it has a schedule fragment
     * for the time period in question.
     */
    validUntil?: Date;
    /**
     * If the organization schedule fragment specifies that the given day
     * belongs to a named period, a weekly schedule from this list with
     * the matching name will be selected.
     */
    weeklyOrgSchedules?: DevRev.WeeklyOrgSchedule[];
}
