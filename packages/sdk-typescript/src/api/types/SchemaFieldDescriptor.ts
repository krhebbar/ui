/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as DevRev from "../index";

/**
 * Set of field attributes.
 */
export type SchemaFieldDescriptor =
    | DevRev.SchemaFieldDescriptor.Array
    | DevRev.SchemaFieldDescriptor.Bool
    | DevRev.SchemaFieldDescriptor.Composite
    | DevRev.SchemaFieldDescriptor.Date_
    | DevRev.SchemaFieldDescriptor.Double
    | DevRev.SchemaFieldDescriptor.Enum
    | DevRev.SchemaFieldDescriptor.Id
    | DevRev.SchemaFieldDescriptor.Int
    | DevRev.SchemaFieldDescriptor.RichText
    | DevRev.SchemaFieldDescriptor.Struct
    | DevRev.SchemaFieldDescriptor.Text
    | DevRev.SchemaFieldDescriptor.Timestamp
    | DevRev.SchemaFieldDescriptor.Tokens
    | DevRev.SchemaFieldDescriptor.Uenum
    | DevRev.SchemaFieldDescriptor.Unknown;

export declare namespace SchemaFieldDescriptor {
    interface Array {
        fieldType: "array";
        value: DevRev.SchemaFieldDescriptorArrayType;
    }

    interface Bool extends DevRev.SchemaBoolFieldDescriptor {
        fieldType: "bool";
    }

    interface Composite extends DevRev.SchemaCompositeFieldDescriptor {
        fieldType: "composite";
    }

    interface Date_ extends DevRev.SchemaDateFieldDescriptor {
        fieldType: "date";
    }

    interface Double extends DevRev.SchemaDoubleFieldDescriptor {
        fieldType: "double";
    }

    interface Enum extends DevRev.SchemaEnumFieldDescriptor {
        fieldType: "enum";
    }

    interface Id extends DevRev.SchemaIdFieldDescriptor {
        fieldType: "id";
    }

    interface Int extends DevRev.SchemaIntFieldDescriptor {
        fieldType: "int";
    }

    interface RichText extends DevRev.SchemaRichTextFieldDescriptor {
        fieldType: "rich_text";
    }

    interface Struct extends DevRev.SchemaStructFieldDescriptor {
        fieldType: "struct";
    }

    interface Text extends DevRev.SchemaTextFieldDescriptor {
        fieldType: "text";
    }

    interface Timestamp extends DevRev.SchemaTimestampFieldDescriptor {
        fieldType: "timestamp";
    }

    interface Tokens extends DevRev.SchemaTokensFieldDescriptor {
        fieldType: "tokens";
    }

    interface Uenum extends DevRev.SchemaUenumFieldDescriptor {
        fieldType: "uenum";
    }

    interface Unknown extends DevRev.SchemaFieldDescriptorBase {
        fieldType: "unknown";
    }
}
