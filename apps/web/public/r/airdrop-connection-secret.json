{
  "$schema": "https://ui.shadcn.com/schema/registry-item.json",
  "name": "airdrop-connection-secret",
  "type": "registry:file",
  "title": "Secret Connection Airdrop",
  "description": "Airdrop configuration for secret-based authentication connections",
  "dependencies": [],
  "registryDependencies": [],
  "files": [
    {
      "path": "registry/default/airdrop/connection/secret/manifest.yaml",
      "content": "version: \"2\"\n\n# This manifest defines your snap-in.\n# The comments below will tell you which fields you can change and which you should keep as they are.\n# For more information about manifests, see https://developer.devrev.ai/public/snapin-development/references/manifest.\n\n# General information about the snap-in, which you can change to your liking.\nname: Todo\ndescription: An Airdrop snap-in for syncing data between Todo and DevRev\n\n# The name of the service account that your snap-in will use in DevRev.\n# You can change the display name value to your liking.\nservice_account:\n  display_name: Todo Bot\n\n# Functions that the snap-in exposes.\n# The names of the functions should be in sync with their references in the 'imports' and\n# 'hooks' sections below and with your code, if you happen to change the names.\n# You can freely change the descriptions of the functions.\nfunctions:\n  - name: extraction\n    description: Airdrop extraction function for Todo\n  - name: loading\n    description: Airdrop loading function for Todo\n\n# The types of connections that the snap-in supports.\n# If an external system supports OAuth, then you should use that.\n# Here we have just one example of a keyring, you can see more advanced examples\n# at https://github.com/devrev/snap-in-examples/tree/main/13-keyring-type.\nkeyring_types:\n  # The keyring type ID can be whatever you want, but it has to match one of the allowed\n  # connection types in the 'imports' section below.\n  - id: example-pat-connection\n\n    # Connection details that are showed when creating a connection in the DevRev app.\n    # You can freely change them, but the external system name should have the first letter capitalized.\n    name: Todo Connection\n    description: Connection details for authenticating with Todo\n    external_system_name: Todo\n\n    # Configuration for passing the secret to the external system, if necessary.\n    # See https://github.com/devrev/snap-in-examples/blob/main/13-keyring-type/custom-keyring-type-basic.yaml\n    # for more info on how the secret config should look like and what these fields mean.\n    kind: \"Secret\"\n    is_subdomain: true\n    secret_config:\n      secret_transform: \".token\"\n      fields:\n        - id: token\n          name: Token\n          description: Example API token\n\n      # Airdrop will call the URL you set with the token to verify its validity.\n      # You need to specify an endpoint in your external system that requires authentication\n      # and ideally also checks if the token has all the required scopes.\n      # TODO: Update the token verification URL to use an actual authenticated endpoint of your external system.\n      token_verification:\n        url: https://app.devrev.ai/favicon.ico\n        method: GET\n\n# Imports define the external systems that the snap-in will sync data from.\nimports:\n  # The slug is the machine-readable name for the import.\n  # In the example below, it's automatically taken from the repository name if you used the template.\n  - slug: airdrop-todo-snap-in\n    display_name: Todo\n    description: Import data from Todo using Airdrop\n\n    # The extractor and loader functions specify which functions from the section\n    # 'functions' above should be called when extracting data from an external\n    # system, or loading data into it.\n    # Make sure these are in sync with the function names in the 'functions' section above\n    # and with your code, if you changed the names.\n    extractor_function: extraction\n\n    # TODO: Uncomment the loader function once you have implemented loading.\n    #loader_function: loading\n\n    # The list of connection types that are available for the external system.\n    # Make sure these are in sync with the keyring types in the 'keyring_types' section above.\n    allowed_connection_types:\n      - example-pat-connection\n",
      "type": "registry:file",
      "target": "~/manifest.yaml"
    }
  ],
  "docs": "Next steps, Generate keyrings for secret connections using the `snapin keyrings` command."
}